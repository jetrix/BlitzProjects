;============================
;BSCVMVIRTUALMACHINE MODULE
;Generated with TypeWriter][
;============================
;Executed Pcode generated by the BlitzScript Compiler

Const BSCVMVIRTUALMACHINE_MAX%=256
Dim bscvmVirtualMachineId.bscvmVirtualMachine(BSCVMVIRTUALMACHINE_MAX%)
Global bscvmVirtualMachineIndex.stack=stackIndexCreate(BSCVMVIRTUALMACHINE_MAX%)
Global bscvmVirtualMachineAvailable.stack=stackIndexCreate(BSCVMVIRTUALMACHINE_MAX%)

Type bscvmVirtualMachine
	Field id%
	Field state%
	Field thread.bscvmThread
End Type

Function bscvmVirtualMachineStart()
End Function

Function bscvmVirtualMachineStop()
	For this.bscvmVirtualMachine=Each bscvmVirtualMachine
		bscvmVirtualMachineDelete(this)
	Next
End Function

Function bscvmVirtualMachineNew.bscvmVirtualMachine()
	this.bscvmVirtualMachine=New bscvmVirtualMachine
	this\id%=0
	this\state%=0
	;this\bscvmThread.bscvmThread=bscvmThreadNew()
	this\id%=StackPop(bscvmVirtualMachineIndex.stack)
	bscvmVirtualMachineId(this\id%)=this
	Return this
End Function

Function bscvmVirtualMachineDelete(this.bscvmVirtualMachine)
	bscvmVirtualMachineId(this\id)=Null
	StackPush(bscvmVirtualMachineIndex.stack,this\id%)
	;bscvmThreadDelete(this\bscvmThread.bscvmThread)
	Delete this
End Function

Function bscvmVirtualMachineProcesss()
	bscvmThreadUpdate()
End Function

Function bscvmVirtualMachineRead.bscvmVirtualMachine(file)
	this.bscvmVirtualMachine=New bscvmVirtualMachine
	this\id%=ReadInt(file)
	this\state%=ReadInt(file)
	this\bscvmThread.bscvmThread=bscvmThreadRead(file)
	Return this
End Function

Function bscvmVirtualMachineWrite(file,this.bscvmVirtualMachine)
	WriteInt(file,this\id%)
	WriteInt(file,this\state%)
	bscvmThreadWrite(file,this\bscvmThread.bscvmThread)
End Function

Function bscvmVirtualMachineOpen(filename$="Default")
	file=ReadFile(filename+".bscvmVirtualMachine")
	Repeat
		bscvmVirtualMachineRead(file)
	Until Eof(file)
	CloseFile(file)
End Function

Function bscvmVirtualMachineSave(filename$="Default")
	file=WriteFile(filename$+".bscvmVirtualMachine")
	For this.bscvmVirtualMachine= Each bscvmVirtualMachine
		bscvmVirtualMachineWrite(file,this)
	Next
	CloseFile(file)
End Function

Function bscvmVirtualMachineCopy.bscvmVirtualMachine(this.bscvmVirtualMachine)
	copy.bscvmVirtualMachine=New bscvmVirtualMachine
	copy\id%=this\id%
	copy\state%=this\state%
	copy\bscvmThread.bscvmThread=bscvmThreadCopy(this\bscvmThread.bscvmThread)
	copy\id%=StackPop(bscvmVirtualMachineIndex.stack)
	bscvmVirtualMachineId(copy\id%)=copy
	Return copy
End Function

Function bscvmVirtualMachineMimic(mimic.bscvmVirtualMachine,this.bscvmVirtualMachine)
	mimic\id%=this\id%
	mimic\state%=this\state%
	bscvmThreadMimic(mimic\bscvmThread.bscvmThread,this\bscvmThread.bscvmThread)
End Function

Function bscvmVirtualMachineCreate.bscvmVirtualMachine(id%,state%,thread.bscvmThread)
	this.bscvmVirtualMachine=bscvmVirtualMachineNew()
	this\id%=id%
	this\state%=state%
	this\bscvmThread.bscvmThread=thread.bscvmThread
	Return this
End Function

Function bscvmVirtualMachineSet(this.bscvmVirtualMachine,id%,state%,thread.bscvmThread)
	this\id%=id%
	this\state%=state%
	this\bscvmThread.bscvmThread=thread.bscvmThread
End Function

Function bscvmVirtualMachineLoad()
	;load compiled stream into bank	
End Function

